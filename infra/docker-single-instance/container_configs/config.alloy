prometheus.scrape "host" {
  targets = [
    {"__address__" = "node-exporter:9100", "instance" = sys.env("HOSTNAME"), "nodename" = sys.env("HOSTNAME")},
  ]

  forward_to = [prometheus.remote_write.default.receiver]

  scrape_interval = "10s"
  metrics_path    = "/metrics"
}

prometheus.scrape "cadvisor" {
  targets = [
    {"__address__" = "cadvisor:8080", "instance" = sys.env("HOSTNAME"), "nodename" = sys.env("HOSTNAME")},
  ]

  forward_to = [prometheus.remote_write.default.receiver]

  scrape_interval = "10s"
  metrics_path    = "/metrics"
}

otelcol.receiver.otlp "default" {
  grpc {}

  output {
    metrics = [otelcol.exporter.prometheus.default.input]
    traces = [otelcol.exporter.otlp.default.input]
  }
}

otelcol.exporter.prometheus "default" {
  forward_to = [prometheus.remote_write.default.receiver]
}

prometheus.remote_write "default" {
  endpoint {
    url = "http://prometheus:9090/api/v1/write"
  }
}

otelcol.exporter.otlp "default" {
  client {
    endpoint = "tempo:4317"
    tls {
      insecure             = true
      insecure_skip_verify = true
    }
  }
}

/*loki.source.gelf "listen"  {
  forward_to    = [loki.relabel.gelf.receiver]
  listen_address = "0.0.0.0:12201"

}

loki.relabel "gelf" {
  forward_to = [loki.write.default.receiver]
  rule {
    source_labels = ["__gelf_message_host"]
    target_label  = "host"
  }
}

prometheus.scrape "loki" {
  targets = [
    {"__address__" = "loki:3100", "instance" = sys.env("HOSTNAME"), "nodename" = sys.env("HOSTNAME")},
  ]

  forward_to = [prometheus.remote_write.default.receiver]

  scrape_interval = "10s"
  metrics_path    = "/metrics"
}

loki.write "default" {
  endpoint {
    url ="http://loki:3100/loki/api/v1/push"
  }
}
*/

